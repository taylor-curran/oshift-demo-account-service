apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "account-service.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "account-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "account-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "account-service.selectorLabels" . | nindent 8 }}
        version: v1
    spec:
      securityContext:
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        seccompProfile:
          type: {{ .Values.securityContext.seccompProfile.type }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
          capabilities:
            drop: {{- toYaml .Values.securityContext.capabilities.drop | nindent 12 }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: management
          containerPort: 8081
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "account-service.fullname" . }}-config
        - secretRef:
            name: {{ include "account-service.fullname" . }}-secrets
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: management
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: management
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
